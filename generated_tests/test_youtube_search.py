"""
PACTS Generated Test
====================
Requirement ID: youtube_search
Generated: 2025-11-01 00:58:40
Verdict: PASS

Discovery Strategies Used:
  - mcp_direct_action

"""

import asyncio
from playwright.async_api import async_playwright


async def test_youtube_search():
    """
    Test for requirement: youtube_search

    Test Details:
    - URL: https://www.youtube.com
    - Steps: 3
    - Verdict: pass
    

    Generated by PACTS v1.0
    """
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=True)
        page = await browser.new_page()

        # Navigate to target URL
        await page.goto("https://www.youtube.com")

        # Step 1: FILL Search
        # Selector: MCP_FILL:Search
        # Strategy: mcp_direct_action, Confidence: 0.95
        await page.locator("MCP_FILL:Search").fill("Playwright automation tutorial")
        # Step 2: PRESS Search
        # Selector: MCP_FILL:Search
        # Strategy: mcp_direct_action, Confidence: 0.95
        await page.locator("MCP_FILL:Search").press("Enter")
        # Step 3: CLICK First Video
        # Selector: MCP_CLICK:First Video
        # Strategy: mcp_direct_action, Confidence: 0.95
        await page.locator("MCP_CLICK:First Video").click()
        await browser.close()


if __name__ == "__main__":
    asyncio.run(test_youtube_search())