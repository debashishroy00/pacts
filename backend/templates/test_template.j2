"""
PACTS Generated Test
====================
Requirement ID: {{ req_id }}
Generated: {{ timestamp }}
Verdict: {{ verdict|upper }}{% if healed %} (HEALED: {{ heal_rounds }} rounds){% endif %}

Discovery Strategies Used:
{% for strategy in strategies_used %}  - {{ strategy }}
{% endfor %}
"""

import asyncio
from playwright.async_api import async_playwright


async def test_{{ test_name }}():
    """
    {{ test_description }}

    Test Details:
    - URL: {{ url }}
    - Steps: {{ steps|length }}
    - Verdict: {{ verdict }}
    {% if healed %}- Healed: Yes ({{ heal_rounds }} rounds){% endif %}

    Generated by PACTS v1.0
    """
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=True)
        page = await browser.new_page()

        # Navigate to target URL
        await page.goto("{{ url }}")

        {% for step in steps -%}
        # Step {{ loop.index }}: {{ step.action|upper }} {{ step.element }}
        # Selector: {{ step.selector }}
        # Strategy: {{ step.meta.strategy }}, Confidence: {{ step.confidence }}
        {% if step.healed -%}
        # HEALED: Round {{ step.heal_round }}, Strategy: {{ step.heal_strategy }}
        {% endif -%}
        {% if step.action == "fill" -%}
        await page.locator("{{ step.selector }}").fill("{{ step.value }}")
        {% elif step.action == "click" -%}
        await page.locator("{{ step.selector }}").click()
        {% elif step.action == "type" -%}
        await page.locator("{{ step.selector }}").type("{{ step.value }}", delay=50)
        {% elif step.action == "press" -%}
        await page.locator("{{ step.selector }}").press("{{ step.value }}")
        {% elif step.action == "select" -%}
        await page.locator("{{ step.selector }}").select_option("{{ step.value }}")
        {% elif step.action == "check" -%}
        await page.locator("{{ step.selector }}").check()
        {% elif step.action == "uncheck" -%}
        await page.locator("{{ step.selector }}").uncheck()
        {% elif step.action == "hover" -%}
        await page.locator("{{ step.selector }}").hover()
        {% elif step.action == "focus" -%}
        await page.locator("{{ step.selector }}").focus()
        {% endif -%}

        {% endfor -%}
        await browser.close()


if __name__ == "__main__":
    asyncio.run(test_{{ test_name }}())
