name: PACTS Smoke Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Manual trigger

jobs:
  smoke-tests:
    name: Smoke Tests (Headless)
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.9'
          cache: 'pip'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        run: playwright install chromium --with-deps

      - name: Create .env file
        run: |
          cat > backend/.env <<EOL
          ANTHROPIC_API_KEY=\${{ secrets.ANTHROPIC_API_KEY }}
          HEADLESS=true
          USE_MCP=false
          LOG_LEVEL=INFO
          SLOW_MO=0
          EOL

      - name: Run Wikipedia test
        run: |
          python -m backend.cli.main test --req wikipedia_search --headed=false
        continue-on-error: true

      - name: Run GitHub test
        run: |
          python -m backend.cli.main test --req github_search --headed=false
        continue-on-error: true

      - name: Run Amazon test
        run: |
          python -m backend.cli.main test --req amazon_search --headed=false
        continue-on-error: true

      - name: Run eBay test
        run: |
          python -m backend.cli.main test --req ebay_search --headed=false
        continue-on-error: true

      - name: Run SauceDemo test
        run: |
          python -m backend.cli.main test --req saucedemo_login --headed=false
        env:
          SAUCEDEMO_USERNAME: standard_user
          SAUCEDEMO_PASSWORD: secret_sauce
        continue-on-error: true

      - name: Upload screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: screenshots/
          retention-days: 7

      - name: Upload generated tests
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generated-tests
          path: generated_tests/
          retention-days: 7

      - name: Check SLOs
        run: |
          echo "SLO Checks:"
          echo "- Success Rate: Target 100% (5/5 sites)"
          echo "- Heal Rounds: Target 0 average"
          echo "- Step Latency p95: Target â‰¤ 2.5s"
          # TODO: Parse test output and validate SLOs
